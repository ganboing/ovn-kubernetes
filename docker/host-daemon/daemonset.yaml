kind: ConfigMap
apiVersion: v1
metadata:
  name: ovn-kube-config
  namespace: kube-system
data:
  #apiserver's public ip
  k8s_api_server: "https://172.16.0.156:6443"

  #cluster cidr
  k8s_cluster_cidr: "192.168.0.0/16"

  #ovn nb
  ovn_nb_db: "tcp:172.16.0.159:6641"

  #ovn sb
  ovn_sb_db: "tcp:172.16.0.159:6642"

---

kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: ovn-kube-watcher
  namespace: kube-system
  labels:
    k8s-app: ovn-kube-watcher
spec:
  selector:
    matchLabels:
      name: ovn-kube-watcher
  template:
    metadata:
      labels:
        name: ovn-kube-watcher
    spec:
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      serviceAccountName: ovn-kube-service-account
      nodeSelector:
        node-role.kubernetes.io/master: ""
      containers:
      - name: ovn-watcher
        image: ovnkube-host-daemon
        imagePullPolicy: Never
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        env:
        - name: OVN_NB_DB
          valueFrom:
            configMapKeyRef:
              name: ovn-kube-config
              key: ovn_nb_db
        - name: OVN_SB_DB
          valueFrom:
            configMapKeyRef:
              name: ovn-kube-config
              key: ovn_sb_db
        - name: OVN_K8S_API_SERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-kube-config
              key: k8s_api_server
        - name: OVN_K8S_CLUSTER_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-kube-config
              key: k8s_cluster_cidr
        - name: OVN_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command: ["/root/go-watcher.bash"]
        volumeMounts:
          - mountPath: /var/run/openvswitch
            name: openvswitch
      volumes:
      - name: openvswitch
        hostPath:
          path: /var/run/openvswitch

---

kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: ovn-kube-node
  namespace: kube-system
  labels:
    k8s-app: ovn-kube-node
spec:
  selector:
    matchLabels:
      name: ovn-kube-node
  template:
    metadata:
      labels:
        name: ovn-kube-node
    spec:
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      serviceAccountName: ovn-kube-service-account
      containers:
      - name: install-cni
        image: ovnkube-host-daemon
        imagePullPolicy: Never
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        env:
        - name: OVN_K8S_API_SERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-kube-config
              key: k8s_api_server
        - name: OVN_K8S_CLUSTER_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-kube-config
              key: k8s_cluster_cidr
        - name: OVN_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command: ["/root/install-cni.bash"]
        volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-conf-dir
          - mountPath: /opt/ovn-kubernetes
            name: ovn-kube-venv
          - mountPath: /host/etc/openvswitch
            name: ovs-conf
          - mountPath: /var/run/openvswitch
            name: ovs-run
      volumes:
      - name: cni-bin-dir
        hostPath:
          path: /opt/cni/bin
      - name: cni-conf-dir
        hostPath:
          path: /etc/cni/net.d
      - name: ovn-kube-venv
        hostPath:
          path: /opt/ovn-kubernetes
      - name: ovs-conf
        hostPath:
          path: /etc/openvswitch
      - name: ovs-run
        hostPath:
          path: /var/run/openvswitch

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ovn-kube-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: ovn-kube-service-account
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: ovn-kube-cluster-role
rules:
  - apiGroups: [""]
    resources:
      - pods
      - nodes
    verbs:
      - get

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: ovn-kube-service-account
  namespace: kube-system

---
